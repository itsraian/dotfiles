---

version: 2
root-markers:
  - .git/
lint-debounce: 100ms

tools:
  css-prettier: &css-prettier
    format-command: >
      ./node_modules/.bin/prettier ${--tab-width:tabWidth}
      ${--single-quote:singleQuote} --parser css
    lint-after-open: true

  dockerfile-hadolint: &dockerfile-hadolint
    lint-command: 'hadolint'
    lint-after-open: true
    lint-formats:
      - '%f:%l %m'

  gitcommit-gitlint: &gitcommit-gitlint
    lint-command: 'gitlint'
    lint-stdin: true
    lint-after-open: true
    lint-formats:
      - '%l: %m: "%r"'
      - '%l: %m'

  html-prettier: &html-prettier
    format-command: >
      ./node_modules/.bin/prettier ${--tab-width:tabWidth}
      ${--single-quote:singleQuote} --parser html
    lint-after-open: true

  javascript-eslint: &javascript-eslint
    lint-command: 'eslint -f visualstudio --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-after-open: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"

  json-fixjson: &json-fixjson
    format-command: 'fixjson'
    lint-after-open: true

  json-jq: &json-jq
    lint-command: 'jq .'
    lint-after-open: true

  json-prettier: &json-prettier
    lint-after-open: true
    format-command: >
      ./node_modules/.bin/prettier ${--tab-width:tabWidth} --parser json

  make-checkmake: &make-checkmake
    lint-command: 'checkmake'
    lint-stdin: true
    lint-after-open: true

  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint -s -c %USERPROFILE%\.markdownlintrc'
    lint-stdin: true
    lint-after-open: true
    lint-formats:
      - '%f:%l %m'
      - '%f:%l:%c %m'
      - '%f: %l: %m'

  markdown-pandoc: &markdown-pandoc
    format-command: 'pandoc -f markdown -t gfm -sp --tab-stop=2'
    lint-after-open: true

  prettierd: &prettierd
    format-command: >
      prettier --stdin-filepath ${INPUT}
    format-stdin: true
    root-markers:
      - .prettierrc
      - .prettierrc.json
      - .prettierrc.js
      - .prettierrc.yml
      - .prettierrc.yaml
      - .prettierrc.json5
      - .prettierrc.mjs
      - .prettierrc.cjs
      - .prettierrc.toml

  sh-shellcheck: &sh-shellcheck
    lint-command: 'shellcheck -f gcc -x'
    lint-after-open: true
    lint-source: 'shellcheck'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  sh-shfmt: &sh-shfmt
    format-command: 'shfmt -ci -s -bn'
    lint-after-open: true
    format-stdin: true

  yaml-yamllint: &yaml-yamllint
    lint-command: 'yamllint -f parsable -'
    lint-after-open: true
    lint-stdin: true

languages:
  css:
    - <<: *css-prettier

  dockerfile:
    - <<: *dockerfile-hadolint

  gitcommit:
    - <<: *gitcommit-gitlint

  html:
    - <<: *html-prettier

  javascript:
    - <<: *javascript-eslint
    - <<: *prettierd

  json:
    - <<: *json-fixjson
    - <<: *json-jq

  make:
    - <<: *make-checkmake

  markdown:
    - <<: *markdown-markdownlint
    - <<: *markdown-pandoc

  sh:
    - <<: *sh-shellcheck
    - <<: *sh-shfmt

  typescript:
    - <<: *javascript-eslint
    - <<: *prettierd

  vue:
    - <<: *javascript-eslint
    - <<: *prettierd

  yaml:
    - <<: *yaml-yamllint
